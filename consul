#!/bin/bash
#
# Resource script for consul agent
#
# Description:  Manages consul agent as an OCF resource in
#               an High Availability setup.
#
# Consul OCF script's Author: Atha Kouroussis
# License: GNU General Public License (GPL)
#
#
#	usage: $0 {start|stop|status|monitor|validate-all|meta-data}
#
#	The "start" arg starts consul.
#
#	The "stop" arg stops it.
#
# OCF parameters:
# OCF_RESKEY_binary
# OCF_RESKEY_configfile
# OCF_RESKEY_extraconf
# OCF_RESKEY_logfile
# OCF_RESKEY_pidfile
# OCF_RESKEY_user
#
##########################################################################
# Initialization:

: "${OCF_FUNCTIONS_DIR=${OCF_ROOT}/resource.d/heartbeat}"
# shellcheck disable=SC1090
. "${OCF_FUNCTIONS_DIR}/.ocf-shellfuncs"

USAGE="Usage: $0 {start|stop|reload|status|monitor|validate-all|meta-data}";

# Defaults
OCF_RESKEY_user_default="consul"
OCF_RESKEY_binary_default="/usr/sbin/consul"
OCF_RESKEY_configfile_default="/etc/consul.conf"
OCF_RESKEY_extraparams_default=""
OCF_RESKEY_logfile_default="/var/log/consul.log"
OCF_RESKEY_pidfile_default="/var/run/consul.pid"

# shellcheck disable=SC2086,SC2154
: ${OCF_RESKEY_user=${OCF_RESKEY_user_default}}
# shellcheck disable=SC2086,SC2154
: ${OCF_RESKEY_binary=${OCF_RESKEY_binary_default}}
# shellcheck disable=SC2086,SC2154
: ${OCF_RESKEY_configfile=${OCF_RESKEY_configfile_default}}
# shellcheck disable=SC2086,SC2154
: ${OCF_RESKEY_extraparams=${OCF_RESKEY_extraparams_default}}
# shellcheck disable=SC2086,SC2154
: ${OCF_RESKEY_logfile=${OCF_RESKEY_logfile_default}}
# shellcheck disable=SC2086,SC2154
: ${OCF_RESKEY_pidfile=${OCF_RESKEY_pidfile_default}}

##########################################################################

usage() {
  echo "${USAGE}" >&2
}

meta_data() {
  cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="consul">
  <version>1.0</version>
  <longdesc lang="en">
    This script manages consul agent
  </longdesc>
  <shortdesc lang="en">Manages a consul agent</shortdesc>

  <parameters>

    <parameter name="user">
      <longdesc lang="en">
        The user running consul agent.
        For example, "consul"
      </longdesc>
      <shortdesc lang="en">Consul user</shortdesc>
      <content type="string" default="${OCF_RESKEY_user_default}"/>
    </parameter>

    <parameter name="binary">
      <longdesc lang="en">
        The consul binary path.
        For example, "/usr/sbin/consul"
      </longdesc>
      <shortdesc lang="en">Full path to the consul binary</shortdesc>
      <content type="string" default="${OCF_RESKEY_binary_default}"/>
    </parameter>

    <parameter name="configfile" unique="0">
      <longdesc lang="en">
        The consul agent configuration file name with full path.
        For example, "/etc/consul.conf"
      </longdesc>
      <shortdesc lang="en">Configuration file name with full path</shortdesc>
      <content type="string" default="${OCF_RESKEY_configfile_default}" />
    </parameter>

    <parameter name="extraparams">
      <longdesc lang="en">
        Extra command line parameters to pass to consul agent.
        For example, "-domain=pacemaker.consul -syslog"
      </longdesc>
      <shortdesc lang="en">Extra command line arguments for consul agent</shortdesc>
      <content type="string" default="${OCF_RESKEY_extraparams_default}" />
    </parameter>

    <parameter name="logfile">
      <longdesc lang="en">
        The consul agent log file name with full path.
        For example, "/var/log/consul.log"
      </longdesc>
      <shortdesc lang="en">Log file name with full path</shortdesc>
      <content type="string" default="${OCF_RESKEY_logfile_default}" />
    </parameter>

    <parameter name="pidfile">
      <longdesc lang="en">
        The consul agent pid file with full path.
        For example, "/var/run/consul.pid"
      </longdesc>
      <shortdesc lang="en">The consul agent pid file with full path</shortdesc>
      <content type="string" default="${OCF_RESKEY_pidfile_default}" />
    </parameter>

  </parameters>

  <actions>
    <action name="start" timeout="20s"/>
    <action name="stop" timeout="20s"/>
    <action name="reload" timeout="40s"/>
    <action name="monitor" depth="0" timeout="20s" interval="60s" />
    <action name="validate-all" timeout="20s"/>
    <action name="meta-data"  timeout="5s"/>
  </actions>
</resource-agent>
END
  exit "${OCF_SUCCESS}"
}

consul_status() {
  if [[ -f $OCF_RESKEY_pidfile ]]; then
    # consul is probably running
    PID=$(cat "${OCF_RESKEY_pidfile}")
    if [[ -n $PID ]]; then
      # shellcheck disable=SC2009
      if ps -fp "${PID}" | grep consul | grep "${OCF_RESKEY_configfile}" >/dev/null ; then
        ocf_log info "consul agent running"
        return "${OCF_SUCCESS}"
      else
        ocf_log info "consul agent is not running but pid file exists"
        return "${OCF_NOT_RUNNING}"
      fi
    else
      ocf_log err "PID file empty!"
      return "${OCF_ERR_GENERIC}"
    fi
  fi

  # consul is not running
  ocf_log info "consul agent is not running"
  return "${OCF_NOT_RUNNING}"
}

consul_start() {
  # if consul agent is running return success
  consul_status
  retval=$?
  if [[ $retval -eq $OCF_SUCCESS ]]; then
    exit "${OCF_SUCCESS}"
  elif [[ $retval -ne $OCF_NOT_RUNNING ]]; then
    ocf_log err "Error. Unknown status."
    exit "${OCF_ERR_GENERIC}"
  fi

  # shellcheck disable=SC2086
  if ! ocf_run su - -s /bin/sh -c "$OCF_RESKEY_binary agent -config-file ${OCF_RESKEY_configfile} -pid-file ${OCF_RESKEY_pidfile} ${OCF_RESKEY_extraparams-} >> ${OCF_RESKEY_logfile} 2>&1 &" $OCF_RESKEY_user; then
    ocf_log err "Error. consul agent returned error $?."
    exit "${OCF_ERR_GENERIC}"
  fi

  ocf_log info "Started consul agent."
  exit "${OCF_SUCCESS}"
}

consul_stop() {
  if consul_status; then
    if [[ -n $PID ]]; then
      if ! kill "${PID}"; then
        if ! kill -SIGKILL "${PID}"; then
          ocf_log err "Error. Could not stop consul agent."
          return "${OCF_ERR_GENERIC}"
        fi
      fi
      rm "${OCF_RESKEY_pidfile}" 2>/dev/null
    fi
  fi
  ocf_log info "Stopped consul agent."
  exit "${OCF_SUCCESS}"
}

consul_reload() {
  # if consul agent is not running return error
  if ! consul_status; then
    ocf_log err "Error. consul agent is not running."
    exit "${OCF_ERR_GENERIC}"
  fi

  # shellcheck disable=SC2086
  if ! kill -s HUP ${PID}; then
    ocf_log err "Error. consul agent returned error $?."
    exit "${OCF_ERR_GENERIC}"
  fi

  ocf_log info "Reloaded consul agent."
  exit "${OCF_SUCCESS}"
}

consul_monitor() {
  consul_status
}

consul_validate_all() {
  if [[ ! -x $OCF_RESKEY_binary ]]; then
    ocf_log err "Binary path $OCF_RESKEY_binary does not exist or is not executable."
    exit "${OCF_ERR_ARGS}"
  fi
  if [[ ! -f $OCF_RESKEY_configfile ]]; then
    ocf_log err "Config file $OCF_RESKEY_configfile does not exist."
    exit "${OCF_ERR_ARGS}"
  fi
  LOG_DIR=$(dirname "${OCF_RESKEY_logfile}")
  if ! su - "${OCF_RESKEY_user}" -c "test -d $LOG_DIR" || ! su - "${OCF_RESKEY_user}" -c "test -w $LOG_DIR"; then
    ocf_log err "Log directory $LOG_DIR does not exist or is not writable by $OCF_RESKEY_user."
    exit "${OCF_ERR_ARGS}"
  fi

  return "${OCF_SUCCESS}"
}


#
# Main
#

if [ $# -ne 1 ]; then
  usage
  exit "${OCF_ERR_ARGS}"
fi

case $1 in
  'start')
    consul_start
    ;;
  'stop')
    consul_stop
    ;;
  'reload')
    consul_reload
    ;;
  'status')
    consul_status
    ;;
  'monitor')
    consul_monitor
    ;;
  'validate'-all)
    consul_validate_all
    ;;
  'meta-data')
    meta_data
    ;;
  'usage')
    usage
    exit "${OCF_SUCCESS}"
    ;;
  *)
    usage
    exit "${OCF_ERR_UNIMPLEMENTED}"
    ;;
esac
